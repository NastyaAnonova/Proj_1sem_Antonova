import re

test_string = """Регулярные выражения представляют собой похожий, но гораздо более сильный инструмент 
для поиска строк, проверки их на соответствие какому-либо шаблону и другой подобной 
работы. Англоязычное название этого инструмента — Regular Expressions или просто RegExp. 
Строго говоря, регулярные выражения — специальный язык для описания шаблонов строк.
​
АААА аааа АаАаАаАа 123 123 12345 11223344
А1Б2В3 АА11 ББ22ВВ 33ГГ44
​
Тест!    Ещё!   Даёшь!   ЁЁЁёёё
​
QwertyЙцукен
​
+-,/[](), *** (***), a*(b+[c+d])*e/f+g-h

!!'''####$$$$$%%%%%&&&'''(((())***++++,,,,,-----..//:::;;;;<<<<<===>>>????
@@@@@[[[[\\\]]]]]^^^__`````{{{{|||||}}}}}~~~~~
<a href="#10">10: CamelCase -> under_score</a>;
<a href="#11">11: Удаление повторов</a>;
<a href="#12">12: Близкие слова</a>;
<a href="#13">13: Форматирование больших чисел</a>;
<a href="#14">14: Разделить текст на предложения</a>;
<a href="#15">15: Форматирование номера телефона</a>;
<a href="#16">16: Поиск e-mail'ов — 2</a>;
"""
print('Все натуральные числа (возможно, окружённые буквами): ', re.findall(r'\d+', test_string))
print('Все «слова», написанные капсом, возможно внутри настоящих слов: ', re.findall(r'\w*[А-ЯA-ZЁё]+\w*', test_string))
print('Слова, в которых есть русская буква, а за ней цифра: ', re.findall(r'\w*[А-Я]\d+\w*', test_string))
print('Все слова, начинающиеся с русской или латинской большой буквы: ', re.findall(r'\b[А-ЯA-ZЁ]\w*', test_string))
print('Слова, которые начинаются на гласную: ', re.findall(r'\b[еоуёюиэыЕОУЁЮИЭЫaoeiuyAOEIUY]\w*', test_string))
print('Все натуральные числа, не находящиеся на границе слова: ', re.findall(r'\B\d+\B', test_string))
print('Строчки, в которых есть символ *: ', re.findall(r'.*\*.*', test_string))
print('Строчки, в которых есть открывающая и когда-нибудь потом закрывающая скобки: ',
      re.findall(r'.*[\(\[\{\[].*[\)\]\}\]].*', test_string))
print('Оглавление: ', re.findall(r'(?:<a.*/a>;\n)+', test_string))
print('Текстовая часть оглавления, без тегов: ', re.findall(r'>(.*)</a', test_string))
print('Пустые строчки: ', re.findall(r'\n\n', test_string))
print('Все теги, не включая их содержимое: ', re.findall(r'<[^<>]*a[^<>]*>', test_string))
